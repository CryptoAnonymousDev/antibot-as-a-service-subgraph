// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class AntibotActiveChanged extends ethereum.Event {
  get params(): AntibotActiveChanged__Params {
    return new AntibotActiveChanged__Params(this);
  }
}

export class AntibotActiveChanged__Params {
  _event: AntibotActiveChanged;

  constructor(event: AntibotActiveChanged) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get active(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class AuthorityChanged extends ethereum.Event {
  get params(): AuthorityChanged__Params {
    return new AuthorityChanged__Params(this);
  }
}

export class AuthorityChanged__Params {
  _event: AuthorityChanged;

  constructor(event: AuthorityChanged) {
    this._event = event;
  }

  get target(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get authorized(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MarkedBlacklisted extends ethereum.Event {
  get params(): MarkedBlacklisted__Params {
    return new MarkedBlacklisted__Params(this);
  }
}

export class MarkedBlacklisted__Params {
  _event: MarkedBlacklisted;

  constructor(event: MarkedBlacklisted) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isBlacklisted(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class MarkedProtected extends ethereum.Event {
  get params(): MarkedProtected__Params {
    return new MarkedProtected__Params(this);
  }
}

export class MarkedProtected__Params {
  _event: MarkedProtected;

  constructor(event: MarkedProtected) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isProtected(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class MarkedUnthrottled extends ethereum.Event {
  get params(): MarkedUnthrottled__Params {
    return new MarkedUnthrottled__Params(this);
  }
}

export class MarkedUnthrottled__Params {
  _event: MarkedUnthrottled;

  constructor(event: MarkedUnthrottled) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isUnthrottled(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class MarkedWhitelisted extends ethereum.Event {
  get params(): MarkedWhitelisted__Params {
    return new MarkedWhitelisted__Params(this);
  }
}

export class MarkedWhitelisted__Params {
  _event: MarkedWhitelisted;

  constructor(event: MarkedWhitelisted) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get isWhitelisted(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class MaxTransferAmountChanged extends ethereum.Event {
  get params(): MaxTransferAmountChanged__Params {
    return new MaxTransferAmountChanged__Params(this);
  }
}

export class MaxTransferAmountChanged__Params {
  _event: MaxTransferAmountChanged;

  constructor(event: MaxTransferAmountChanged) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get maxTransferAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TradingStartChanged extends ethereum.Event {
  get params(): TradingStartChanged__Params {
    return new TradingStartChanged__Params(this);
  }
}

export class TradingStartChanged__Params {
  _event: TradingStartChanged;

  constructor(event: TradingStartChanged) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tradingStart(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Antibot extends ethereum.SmartContract {
  static bind(address: Address): Antibot {
    return new Antibot("Antibot", address);
  }

  assureCanTransfer(from: Address, to: Address, amount: BigInt): boolean {
    let result = super.call(
      "assureCanTransfer",
      "assureCanTransfer(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_assureCanTransfer(
    from: Address,
    to: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "assureCanTransfer",
      "assureCanTransfer(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAntibotActive(param0: Address): boolean {
    let result = super.call(
      "isAntibotActive",
      "isAntibotActive(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isAntibotActive(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAntibotActive",
      "isAntibotActive(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorized(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isAuthorized",
      "isAuthorized(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isAuthorized(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuthorized",
      "isAuthorized(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBlacklisted(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isBlacklisted",
      "isBlacklisted(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isBlacklisted(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isBlacklisted",
      "isBlacklisted(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isProtected(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isProtected",
      "isProtected(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isProtected(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isProtected",
      "isProtected(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isUnthrottled(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isUnthrottled",
      "isUnthrottled(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isUnthrottled(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUnthrottled",
      "isUnthrottled(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWhitelisted(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isWhitelisted",
      "isWhitelisted(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isWhitelisted(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelisted",
      "isWhitelisted(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxTransferAmount(param0: Address): BigInt {
    let result = super.call(
      "maxTransferAmount",
      "maxTransferAmount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_maxTransferAmount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxTransferAmount",
      "maxTransferAmount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tradingStart(param0: Address): BigInt {
    let result = super.call("tradingStart", "tradingStart(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_tradingStart(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tradingStart",
      "tradingStart(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ActivateAntibotForTokenCall extends ethereum.Call {
  get inputs(): ActivateAntibotForTokenCall__Inputs {
    return new ActivateAntibotForTokenCall__Inputs(this);
  }

  get outputs(): ActivateAntibotForTokenCall__Outputs {
    return new ActivateAntibotForTokenCall__Outputs(this);
  }
}

export class ActivateAntibotForTokenCall__Inputs {
  _call: ActivateAntibotForTokenCall;

  constructor(call: ActivateAntibotForTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tradingStart_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxTransferAmount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokenOwner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ActivateAntibotForTokenCall__Outputs {
  _call: ActivateAntibotForTokenCall;

  constructor(call: ActivateAntibotForTokenCall) {
    this._call = call;
  }
}

export class AssureCanTransferCall extends ethereum.Call {
  get inputs(): AssureCanTransferCall__Inputs {
    return new AssureCanTransferCall__Inputs(this);
  }

  get outputs(): AssureCanTransferCall__Outputs {
    return new AssureCanTransferCall__Outputs(this);
  }
}

export class AssureCanTransferCall__Inputs {
  _call: AssureCanTransferCall;

  constructor(call: AssureCanTransferCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AssureCanTransferCall__Outputs {
  _call: AssureCanTransferCall;

  constructor(call: AssureCanTransferCall) {
    this._call = call;
  }

  get response(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BlacklistAccountCall extends ethereum.Call {
  get inputs(): BlacklistAccountCall__Inputs {
    return new BlacklistAccountCall__Inputs(this);
  }

  get outputs(): BlacklistAccountCall__Outputs {
    return new BlacklistAccountCall__Outputs(this);
  }
}

export class BlacklistAccountCall__Inputs {
  _call: BlacklistAccountCall;

  constructor(call: BlacklistAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get blacklisted(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class BlacklistAccountCall__Outputs {
  _call: BlacklistAccountCall;

  constructor(call: BlacklistAccountCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MassBlacklistAccountCall extends ethereum.Call {
  get inputs(): MassBlacklistAccountCall__Inputs {
    return new MassBlacklistAccountCall__Inputs(this);
  }

  get outputs(): MassBlacklistAccountCall__Outputs {
    return new MassBlacklistAccountCall__Outputs(this);
  }
}

export class MassBlacklistAccountCall__Inputs {
  _call: MassBlacklistAccountCall;

  constructor(call: MassBlacklistAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get blacklisted(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class MassBlacklistAccountCall__Outputs {
  _call: MassBlacklistAccountCall;

  constructor(call: MassBlacklistAccountCall) {
    this._call = call;
  }
}

export class MassProtectAccountCall extends ethereum.Call {
  get inputs(): MassProtectAccountCall__Inputs {
    return new MassProtectAccountCall__Inputs(this);
  }

  get outputs(): MassProtectAccountCall__Outputs {
    return new MassProtectAccountCall__Outputs(this);
  }
}

export class MassProtectAccountCall__Inputs {
  _call: MassProtectAccountCall;

  constructor(call: MassProtectAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get protected_(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class MassProtectAccountCall__Outputs {
  _call: MassProtectAccountCall;

  constructor(call: MassProtectAccountCall) {
    this._call = call;
  }
}

export class MassUnthrottleAccountCall extends ethereum.Call {
  get inputs(): MassUnthrottleAccountCall__Inputs {
    return new MassUnthrottleAccountCall__Inputs(this);
  }

  get outputs(): MassUnthrottleAccountCall__Outputs {
    return new MassUnthrottleAccountCall__Outputs(this);
  }
}

export class MassUnthrottleAccountCall__Inputs {
  _call: MassUnthrottleAccountCall;

  constructor(call: MassUnthrottleAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get unthrottled(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class MassUnthrottleAccountCall__Outputs {
  _call: MassUnthrottleAccountCall;

  constructor(call: MassUnthrottleAccountCall) {
    this._call = call;
  }
}

export class MassWhitelistAccountCall extends ethereum.Call {
  get inputs(): MassWhitelistAccountCall__Inputs {
    return new MassWhitelistAccountCall__Inputs(this);
  }

  get outputs(): MassWhitelistAccountCall__Outputs {
    return new MassWhitelistAccountCall__Outputs(this);
  }
}

export class MassWhitelistAccountCall__Inputs {
  _call: MassWhitelistAccountCall;

  constructor(call: MassWhitelistAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get whitelisted(): Array<boolean> {
    return this._call.inputValues[2].value.toBooleanArray();
  }
}

export class MassWhitelistAccountCall__Outputs {
  _call: MassWhitelistAccountCall;

  constructor(call: MassWhitelistAccountCall) {
    this._call = call;
  }
}

export class ProtectAccountCall extends ethereum.Call {
  get inputs(): ProtectAccountCall__Inputs {
    return new ProtectAccountCall__Inputs(this);
  }

  get outputs(): ProtectAccountCall__Outputs {
    return new ProtectAccountCall__Outputs(this);
  }
}

export class ProtectAccountCall__Inputs {
  _call: ProtectAccountCall;

  constructor(call: ProtectAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get protected_(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class ProtectAccountCall__Outputs {
  _call: ProtectAccountCall;

  constructor(call: ProtectAccountCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAntibotActiveCall extends ethereum.Call {
  get inputs(): SetAntibotActiveCall__Inputs {
    return new SetAntibotActiveCall__Inputs(this);
  }

  get outputs(): SetAntibotActiveCall__Outputs {
    return new SetAntibotActiveCall__Outputs(this);
  }
}

export class SetAntibotActiveCall__Inputs {
  _call: SetAntibotActiveCall;

  constructor(call: SetAntibotActiveCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get active(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAntibotActiveCall__Outputs {
  _call: SetAntibotActiveCall;

  constructor(call: SetAntibotActiveCall) {
    this._call = call;
  }
}

export class SetAuthorityCall extends ethereum.Call {
  get inputs(): SetAuthorityCall__Inputs {
    return new SetAuthorityCall__Inputs(this);
  }

  get outputs(): SetAuthorityCall__Outputs {
    return new SetAuthorityCall__Outputs(this);
  }
}

export class SetAuthorityCall__Inputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get authorized(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetAuthorityCall__Outputs {
  _call: SetAuthorityCall;

  constructor(call: SetAuthorityCall) {
    this._call = call;
  }
}

export class SetMaxTransferAmountCall extends ethereum.Call {
  get inputs(): SetMaxTransferAmountCall__Inputs {
    return new SetMaxTransferAmountCall__Inputs(this);
  }

  get outputs(): SetMaxTransferAmountCall__Outputs {
    return new SetMaxTransferAmountCall__Outputs(this);
  }
}

export class SetMaxTransferAmountCall__Inputs {
  _call: SetMaxTransferAmountCall;

  constructor(call: SetMaxTransferAmountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get maxTransferAmount_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMaxTransferAmountCall__Outputs {
  _call: SetMaxTransferAmountCall;

  constructor(call: SetMaxTransferAmountCall) {
    this._call = call;
  }
}

export class SetTradingStartCall extends ethereum.Call {
  get inputs(): SetTradingStartCall__Inputs {
    return new SetTradingStartCall__Inputs(this);
  }

  get outputs(): SetTradingStartCall__Outputs {
    return new SetTradingStartCall__Outputs(this);
  }
}

export class SetTradingStartCall__Inputs {
  _call: SetTradingStartCall;

  constructor(call: SetTradingStartCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tradingStart_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTradingStartCall__Outputs {
  _call: SetTradingStartCall;

  constructor(call: SetTradingStartCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnthrottleAccountCall extends ethereum.Call {
  get inputs(): UnthrottleAccountCall__Inputs {
    return new UnthrottleAccountCall__Inputs(this);
  }

  get outputs(): UnthrottleAccountCall__Outputs {
    return new UnthrottleAccountCall__Outputs(this);
  }
}

export class UnthrottleAccountCall__Inputs {
  _call: UnthrottleAccountCall;

  constructor(call: UnthrottleAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get unthrottled(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class UnthrottleAccountCall__Outputs {
  _call: UnthrottleAccountCall;

  constructor(call: UnthrottleAccountCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WhitelistAccountCall extends ethereum.Call {
  get inputs(): WhitelistAccountCall__Inputs {
    return new WhitelistAccountCall__Inputs(this);
  }

  get outputs(): WhitelistAccountCall__Outputs {
    return new WhitelistAccountCall__Outputs(this);
  }
}

export class WhitelistAccountCall__Inputs {
  _call: WhitelistAccountCall;

  constructor(call: WhitelistAccountCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get whitelisted(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class WhitelistAccountCall__Outputs {
  _call: WhitelistAccountCall;

  constructor(call: WhitelistAccountCall) {
    this._call = call;
  }
}
